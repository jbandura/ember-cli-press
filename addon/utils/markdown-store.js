import Ember from 'ember';
import markdownFiles from 'ember-cli-press/markdownFiles';
import feedParserService from 'ember-cli-press/utils/feed-parser';

const { Service, String: { pluralize } } = Ember;
const feedParser = feedParserService.create();

export default Service.extend({
  /**
   * List of markdown files generated by index.js
   * @property markdownFiles
   * @type {Object[]}
   */
  markdownFiles,

  /**
   * feedParser service
   * @property feedParser
   * @type {FeedParser}
   */
  feedParser,

  /**
   * List of feeds
   * It's for private use only - if you want to get all items use methods `query`, `findAll`, etc.
   * @property feed
   * @type {Ember.Object[]}
   * @private
   */
  _feed: null,

  /**
   * Parse feed when object created.
   */
  init() {
    this._super(...arguments);
    this.set(
      '_feed',
      this.get('feedParser').parseFeed(this.get('markdownFiles'))
    );
  },

  /**
   * Returns all items of given type
   * @param {String} type
   * @returns {Object[] | []} array of results
   */
  findAll(type) {
    return this.get(`_feed.${pluralize(type)}`);
  },

  /**
   * Returns item that matches given type and id
   * @param {String} type
   * @param {String} type
   * @returns {Object|null}
   */
  find(type, id) {
    let items = this.findAll(type);
    return items.findBy('url', id);
  },

  /**
   * Query the store for items of given type that match given criteria.
   * @param {String} key
   * @param {String} value
   * @returns {Ember.Object[]} list of feeds matching given criteria
   */
  query(type, criteria) {
    let items = this.findAll(type);
    return items.filter((item) => {
      return this._queryByCriteria(item, criteria);
    });
  },

  /**
   * Helper for checking if single item matches given criteria
   * @param {Object} item
   * @param {Object} criteria POJO of criteria to be checked
   * @returns {Boolean}
   * @private
   */
  _queryByCriteria(item, criteria) {
    let result = Ember.A(Object.keys(criteria).map((name) => {
      if (name === 'category') {
        return item.categories.indexOf(criteria[name]) > -1;
      }

      return item[name] === criteria[name];
    }));
    // let's see if every criteria fulfilled
    return result.reduce((itemA, itemB) => {
      return itemA && itemB;
    });
  }
});
